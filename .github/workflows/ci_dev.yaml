name: E-Commerce container build

on:
  push:
    branches:
      - development


jobs:
  build:
    runs-on: self-hosted  # The job runs on a self-hosted runner to avoid cost for the case study

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Read version from manifest.json
        id: get_version
        run: |
          VERSION=$(jq -r '.version' manifest.json)
          echo "VERSION=${VERSION}" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image (builder stage)
        run: docker buildx build --load --target builder -t wp-release:builder${{ env.VERSION }} .

      - name: Security Scan with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: wp-release:builder
      
      - name: Run PHP Unit Tests
        run: |
          docker run --rm -e HTTP_HOST=localhost -e WORDPRESS_DB_HOST=localhost -e WORDPRESS_DB_USER=root -e WORDPRESS_DB_PASSWORD=root wp-release:builder phpunit --configuration phpunit.xml

      # Tag and push Docker image to local registry (for testing the pipeline without cost)
      - name: Tag and push Docker image
        run: |
          docker tag wp-release:builder${{ env.VERSION }} localhost:5000/wp-release:builder${{ env.VERSION }}
          docker push localhost:5000/wp-release:builder${{ env.VERSION }}

      ## If all goes well, lets deploy it on the cluster
      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v0
        with:
          version: 'latest'
          service_account_key: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}


      - name: Download Terraform Outputs
        run: |
          gsutil cp gs://abc-tf-outputs-${{ secrets.ENVIRONMENT }}/terraform-outputs-${{ secrets.ENVIRONMENT }}.json .

      - name: Parse Terraform Outputs and Set Environment Variables
        id: parse_outputs
        run: |
          export $(jq -r 'to_entries | .[] | "\(.key)=\(.value)"' terraform-outputs-${{ secrets.ENVIRONMENT }}.json | xargs) > /dev/null 2>&1
          
          echo "CLUSTER_CA_CERTIFICATE=$cluster_ca_certificate" >> $GITHUB_ENV
          echo "CLUSTER_ENDPOINT=$cluster_endpoint" >> $GITHUB_ENV
          echo "CLUSTER_NAME=$cluster_name" >> $GITHUB_ENV
          echo "CLUSTER_ZONE=$cluster_zone" >> $GITHUB_ENV
          echo "GCP_PROJECT_ID=$gcp_project_id" >> $GITHUB_ENV
          echo "WORDPRESS_USERNAME=$wordpress_username" >> $GITHUB_ENV
          echo "WORDPRESS_PASSWORD=$wordpress_password" >> $GITHUB_ENV
          echo "MYSQL_HOST=$mysql_host" >> $GITHUB_ENV
          echo "MYSQL_INSTANCE_CONNECTION_NAME=$mysql_instance_connection_name" >> $GITHUB_ENV
          echo "MYSQL_DATABASE_NAME=$mysql_database_name" >> $GITHUB_ENV
          echo "REDIS_HOST=$redis_host" >> $GITHUB_ENV
          echo "REDIS_PORT=$redis_port" >> $GITHUB_ENV
          echo "REDIS_AUTH_PASSWORD=$redis_auth_password" >> $GITHUB_ENV
      
      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

      - name: Create Helm Values File
        run: |
          cat <<EOF > values.yaml > /dev/null 2>&1
          image:
            repository: localhost:5000/wp-release:builder${{ env.VERSION }}
          replicaCount: 1
          autoscaling:
            enabled: false
            minReplicas: 1
            maxReplicas: 1
            targetCPU: 80
            targetMemory: 80
          resources:
            limits:
              memory: 1Gi
              cpu: 1
            requests:
              memory: 512Mi
              cpu: 500m
          wordpressUsername: $WORDPRESS_USERNAME
          wordpressPassword: $WORDPRESS_PASSWORD
          wordpressEmail: admin@abc-company.com
          externalDatabase:
              user: $WORDPRESS_USERNAME
              password: $WORDPRESS_PASSWORD
              database: $MYSQL_DATABASE_NAME
              host: $MYSQL_HOST
          externalCache:
            host: $REDIS_HOST
            port: $REDIS_PORT
            password: $REDIS_AUTH_PASSWORD
          EOF > /dev/null 2>&1
      

      - name: Authenticate to GKE
        run: |
          gcloud container clusters get-credentials ${{ secrets.CLUSTER_NAME }} --zone ${{ secrets.CLUSTER_ZONE }}


      - name: Add Bitnami Helm Repository
        run: |
          helm repo add bitnami https://charts.bitnami.com/bitnami
          helm repo update

      - name: Deploy Helm Chart
        run: |
          helm upgrade --install wordpress ./helm-chart --values values.yaml
